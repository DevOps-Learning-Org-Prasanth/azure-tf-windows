name: terraform apply
on: 
  workflow_dispatch:
    inputs:
      Operation: 
        description: "create or delete"
        default: 'create'
        required: true

env:
  WORKSPACE: ${{ github.event.inputs.instance }}
  ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}

jobs:
  Create:
    name: windows_server_apply
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.Operation == 'create' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.2

      - uses: azure/login@v1
        with: 
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: terraform init
        id: init
        working-directory: ./
        run: terraform init -input=false

      - name: terraform apply
        id: apply
        run: terraform apply -input=false -var-file=./env/values.tfvars -auto-approve -var "username=${{ secrets.VM_USERNAME }}" -var "password=${{secrets.VM_PASSWORD}}"
  
  Delete:
    name: windows_server_destroy
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.Operation == 'delete' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.2

      - uses: azure/login@v1
        with: 
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: terraform init
        id: init
        working-directory: ./
        run: terraform init -input=false

      - name: terraform apply
        id: apply
        run: terraform destroy -input=false -var-file=./env/values.tfvars -auto-approve -var "username=${{ secrets.VM_USERNAME }}" -var "password=${{secrets.VM_PASSWORD}}"
